# ./rabbit_init/init_queues.py
import pika
import os
import time
RABBITMQ_HOST = os.environ.get("RABBITMQ_HOST", "rabbitmq")
RABBITMQ_USER = os.environ.get("RABBITMQ_USER", "guest")
RABBITMQ_PASSWORD = os.environ.get("RABBITMQ_PASSWORD", "guest")

credentials = pika.PlainCredentials(RABBITMQ_USER, RABBITMQ_PASSWORD)
parameters = pika.ConnectionParameters(host=RABBITMQ_HOST, credentials=credentials)

for i in range(10):
    try:
        connection = pika.BlockingConnection(parameters)
        break
    except pika.exceptions.AMQPConnectionError:
        print(f"üîÅ [{i+1}/10] RabbitMQ –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤. –û–∂–∏–¥–∞–Ω–∏–µ 10 —Å–µ–∫...")
        time.sleep(10)
else:
    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ RabbitMQ –ø–æ—Å–ª–µ 10 –ø–æ–ø—ã—Ç–æ–∫")
    exit(1)

channel = connection.channel()

channel.queue_declare(queue='songs.queue', durable=True)        # –¥–ª—è elasticsearch —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ—Ç–æ–¥–∞–Ω–Ω—ã–º–∏ –ø–µ—Å–Ω–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ elasticsearch
print("‚úÖ –û—á–µ—Ä–µ–¥—å 1 'songs.queue' –≥–æ—Ç–æ–≤–∞")
channel.queue_declare(queue='user.events', durable=True)         # –¥–ª—è analytics —Å–æ–±—ã—Ç–∏—è –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
print("‚úÖ –û—á–µ—Ä–µ–¥—å 2 'user.events' –≥–æ—Ç–æ–≤–∞")
channel.queue_declare(queue='recomdation.send', durable=True)   # –¥–ª—è user —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –≥–æ–≤–æ—Ä–∏—Ç —á—Ç–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ minio –∏ –≥–¥–µ –æ–Ω–∏ –ª–µ–∂–∞—Ç
print("‚úÖ –û—á–µ—Ä–µ–¥—å 3 'recomdation.send' –≥–æ—Ç–æ–≤–∞")
# RABBIT_QUEUES = ["playlist_queue", "favorites_queue", "dislikes_queue", "playlist-user_queue"]
